cache:
  - 'target -> Cargo.lock'
  - 'C:\Users\appveyor\.cargo -> Cargo.lock'

environment:
  OPENSSL_INCLUDE_DIR: C:\OpenSSL\include
  OPENSSL_LIB_DIR: C:\OpenSSL\lib
  OPENSSL_LIBS: ssleay32:libeay32
  OPENSSL_STATIC: '1'
  GITHUB_AUTH_TOKEN:
    secure: OIMAVZAsCzaNv3emTg9MlxxuA0vi2lwJM41cEtTjb9p1CQbDEO3riYwcVzLDjhZi

  matrix:
  - TARGET: i686-pc-windows-gnu
    MINGW_URL: https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/mingw-builds/4.9.2/threads-win32/dwarf/i686-4.9.2-release-win32-dwarf-rt_v4-rev4.7z/download
    MINGW_ARCHIVE: i686-4.9.2-release-win32-dwarf-rt_v4-rev4.7z
    MINGW_DIR: mingw32
    BITS: 32
  #- TARGET: x86_64-pc-windows-gnu
  #  BITS: 64
  #- TARGET: i686-pc-windows-msvc
  #  BITS: 32
  #- TARGET: x86_64-pc-windows-msvc
  #  BITS: 64

install:
  # Install rust, x86_64-pc-windows-msvc host
  # FIXME: switch back to win.rustup.rs
  - curl -sSf -o rustup-init.exe https://dev-static.rust-lang.org/rustup/dist/i686-pc-windows-gnu/rustup-init.exe
  - rustup-init.exe -y
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustup default nightly-2016-05-22-x86_64-pc-windows-msvc

  # Install the target we're compiling for
  - if NOT "%TARGET%" == "x86_64-pc-windows-msvc" rustup target add %TARGET%

  # Use the system msys if we can
  - set PATH=C:\msys64\mingw%BITS%\bin;C:\msys64\usr\bin;%PATH%

  # download a custom compiler otherwise
  - if defined MINGW_ARCHIVE appveyor DownloadFile "%MINGW_URL%" -FileName "%MINGW_ARCHIVE%"
  - if defined MINGW_ARCHIVE 7z x -y "%MINGW_ARCHIVE%" > nul
  - if defined MINGW_ARCHIVE set PATH=%CD%\%MINGW_DIR%\bin;C:\msys64\usr\bin;%PATH%

  # Open SSL
  - ps: Start-FileDownload "http://slproweb.com/download/Win${env:BITS}OpenSSL-1_0_2h.exe"
  - Win%BITS%OpenSSL-1_0_2h.exe /SILENT /VERYSILENT /SP- /DIR="C:\OpenSSL"

  # let's see what we got
  - where gcc rustc cargo
  - rustc -vV
  - cargo -vV
  - set CARGO_TARGET_DIR=%CD%\target

build: false

test_script:
  - cargo build --release --target %TARGET%

after_test:
  - powershell -File .ci/deploy.ps1
